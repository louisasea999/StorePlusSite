<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dxc.pai.dao.OrderTableMapper" >
  <resultMap id="BaseResultMap" type="com.dxc.pai.model.OrderTable" >
    <id column="id" property="id" jdbcType="CHAR" />
    <result column="opentime" property="opentime" jdbcType="TIMESTAMP" />
    <result column="tablecode" property="tablecode" jdbcType="CHAR" />
    <result column="fooddetails" property="fooddetails" jdbcType="VARCHAR" />
    <result column="find_allfaces_id" property="findAllfacesId" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="fooddetails" type="java.lang.String" >
  	<result column="fooddetails" property="fooddetails" jdbcType="VARCHAR" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from ordertable
    where id = #{id,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.dxc.pai.model.OrderTable" >
    insert into ordertable (id, opentime, tablecode, 
      fooddetails, find_allfaces_id)
    values (#{id,jdbcType=CHAR}, #{opentime,jdbcType=TIMESTAMP}, #{tablecode,jdbcType=CHAR}, 
      #{fooddetails,jdbcType=VARCHAR}, #{findAllfacesId,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.dxc.pai.model.OrderTable" >
    update ordertable
    set opentime = #{opentime,jdbcType=TIMESTAMP},
      tablecode = #{tablecode,jdbcType=CHAR},
      fooddetails = #{fooddetails,jdbcType=VARCHAR},
      find_allfaces_id = #{findAllfacesId,jdbcType=INTEGER}
    where id = #{id,jdbcType=CHAR}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select id, opentime, tablecode, fooddetails, find_allfaces_id
    from ordertable
    where id = #{id,jdbcType=CHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, opentime, tablecode, fooddetails, find_allfaces_id
    from ordertable
  </select>
  <select id = "selectLatest" resultMap = "fooddetails" parameterType="java.lang.Integer" >
    select fooddetails 
    from ordertable
    <!-- order by opentime desc -->
    limit #{number,jdbcType=INTEGER}
  </select>
  <select id = "selectFirst" resultMap = "BaseResultMap" parameterType="java.lang.Integer" >
    select id, opentime, tablecode, fooddetails, find_allfaces_id
    from ordertable
    <!-- order by opentime desc -->
    limit #{number,jdbcType=INTEGER}
  </select>
  <!-- <select id="getARange" resultMap="BaseResultMap" >
  	select id, opentime, tablecode, fooddetails, find_allfaces_id
    from ordertable 
    where opentime &gt;= timestamp #{op} and opentime &lt;= timestamp #{ed}
  </select> -->
  
 <!--  <select id="getRange" resultMap="BaseResultMap" parameterType="java.util.Date" >
  	select id, opentime, tablecode, fooddetails, find_allfaces_id 
  	from ordertable 
  	where opentime between #{start,jdbcType=TIMESTAMP} and #{end,jdbcType=TIMESTAMP}
  </select> -->
   <select id="getRange" resultMap="BaseResultMap" parameterType="java.util.Date">
  	select id, opentime, tablecode, fooddetails, find_allfaces_id 
  	from ordertable 
  	where opentime between #{start,jdbcType=TIMESTAMP} and #{end,jdbcType=TIMESTAMP}
  </select>
</mapper>